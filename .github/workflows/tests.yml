# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        go: [ '1.21', '1.22', '1' ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go }}

    - name: Vet
      run: go vet -v ./...

    - name: Test
      run: go test -v ./...

  adapters:
    strategy:
      matrix:
        go: [ '1.22']
        adapters: [ 'kafkastreamer', 'reflexstreamer', 'sqlstore', 'sqltimeout' ]
        mysql: [ 'mysql:8' ]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: ${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: example
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - name: Vet
        run: cd ./adapters/${{ matrix.adapters }} && go vet -v ./...
      - name: Test
        run: cd ./adapters/${{ matrix.adapters }} && go test -v ./...
        env:
          DB_TEST_URI: "root:@tcp(localhost:${{ job.services.mysql.ports[3306] }})/"
          DB_EXAMPLE_CLIENT_URI: "root@tcp(localhost:${{ job.services.mysql.ports[3306] }})/"
          DB_EXAMPLE_SERVER_URI: "root@tcp(localhost:${{ job.services.mysql.ports[3306] }})/"